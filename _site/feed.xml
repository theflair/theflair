<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/mundana-theme-jekyll/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/mundana-theme-jekyll/" rel="alternate" type="text/html" /><updated>2020-02-25T15:18:45+05:30</updated><id>http://localhost:4000/mundana-theme-jekyll/feed.xml</id><title type="html">The Flair</title><subtitle>Here at The Flair we inspire and endeavor to share everything about technology like Softwares, Coding, etc., and provide our best about HOW TO tutorials and BEST OF every category in accordence to our knowledge.</subtitle><entry><title type="html">Android 11 Developer Preview 1</title><link href="http://localhost:4000/mundana-theme-jekyll/android-11-developer-preview-1/" rel="alternate" type="text/html" title="Android 11 Developer Preview 1" /><published>2020-02-20T00:00:00+05:30</published><updated>2020-02-20T00:00:00+05:30</updated><id>http://localhost:4000/mundana-theme-jekyll/android-11-developer-preview-1</id><content type="html" xml:base="http://localhost:4000/mundana-theme-jekyll/android-11-developer-preview-1/"></content><author><name></name></author><summary type="html"></summary></entry><entry><title type="html">Creating a Simple python TelegramBot using Flask and deploying it in heroku.</title><link href="http://localhost:4000/mundana-theme-jekyll/Simple-python-telegram-bot/" rel="alternate" type="text/html" title="Creating a Simple python TelegramBot using Flask and deploying it in heroku." /><published>2020-02-18T00:00:00+05:30</published><updated>2020-02-18T00:00:00+05:30</updated><id>http://localhost:4000/mundana-theme-jekyll/Simple-python-telegram-bot</id><content type="html" xml:base="http://localhost:4000/mundana-theme-jekyll/Simple-python-telegram-bot/">Writing code for python telegram bot is easy. We add some extra things to integrate with telegram. Follow me you can build a bot easily.. 

## Requirements for PythonTelegramBot :
Firstly, get your bot a token and a username.
Search for &quot;botfather&quot; in telegram. Now follow the instructions in the BotFather..
This is the link for the official BotFather [https://t.me/BotFather](https://t.me/BotFather)
+ Rember the username is unique, so if the username is taken, try another one.
+ Remember the API_TOKEN is confidential, secure it.
+ Else your bot can be controlled by others.

![New Bot]({{ site.baseurl }}/assets/images/pytelebot/new_bot.jpg)     ![New Bot Created]({{ site.baseurl }}/assets/images/pytelebot/bot_done.jpg)

##### Now we need to install some libraries for getting started
`
pip3 install telebot 
pip3 install python-telegram-bot
`
### Our first program :
Here is the simple bot which echo's what you sent to it.
```python
  #!/usr/bin/python
  # This is a simple echo bot using the decorator mechanism.
  # It echoes any incoming text messages.
  
  import telebot
            
  API_TOKEN = 'Your_API_Token_Here'
            
  bot = telebot.TeleBot(API_TOKEN)
            
            
  # Handle '/start' and '/help'
  @bot.message_handler(commands=['help', 'start'])
  def send_welcome(message):
  bot.reply_to(message, &quot;\nHi there, I am EchoBot.\nI am here to echo your words. 
  Just send anything  and I'll send the same thing to you!\n&quot;)
            
            
  # Handle all other messages with content_type 'text' (content_types defaults to ['text'])
  @bot.message_handler(func=lambda message: True)
  def echo_message(message):
  bot.reply_to(message, message.text)
                   
  bot.polling()
```
Now run the code by

`
python3 file_name.py 
`


This is a simple echo bot. What ever the message you send to it, it sends you the same message.

+ Below are some predefined commands for our bot, so with out typing the whole sentence we can just type the command for the output. 
```python
 @bot.message_handler(commands=['help', 'start'])
```
Below this we should write the function that should be executed when the command is sent. 

**Till now we have written a simple program.** 

### Deploying PythonTelegramBot in Heroku
For deploying our bot we will use **Flask**, because for contacting bot we use webhooks method.
So, to install flask use,

`
pip3 install flask 
`

After installing we should change our code a little bit so as to work with flask. 

```python
  server = Flask(__name__)
  PORT = int(os.environ.get('PORT', '8443'))
```

Use the below code at the end of the application.

```python
@server.route('/' + API_TOKEN, methods=['POST'])
  def getMessage():
      bot.process_new_updates([telebot.types.Update.de_json(request.stream.read().decode(&quot;utf-8&quot;))])
      return &quot;!&quot;, 200
  
  
  @server.route(&quot;/&quot;)
  def webhook():
      bot.remove_webhook()
      bot.set_webhook(url='Your_App_Name_Link_Here' + API_TOKEN)
      return &quot;!&quot;, 200
  
  
  if __name__ == &quot;__main__&quot;:
  server.run(host=&quot;0.0.0.0&quot;, port=int(os.environ.get('PORT', 5000)))
```
After this the final code looks like

```python

  #!/usr/bin/python
  # This is a simple echo bot using the decorator mechanism.
  # It echoes any incoming text messages.
  
  import telebot
  from flask import Flask, request
  import os
  API_TOKEN = 'Your_API_Token_Here'
            
  bot = telebot.TeleBot(API_TOKEN)
  server = Flask(__name__)
  PORT = int(os.environ.get('PORT', '8443'))          
            
  # Handle '/start' and '/help'
  @bot.message_handler(commands=['help', 'start'])
  def send_welcome(message):
  bot.reply_to(message, &quot;\nHi there, I am EchoBot.\nI am here to echo your words. 
  Just send anything  and I'll send the same thing to you!\n&quot;)
            
            
  # Handle all other messages with content_type 'text' (content_types defaults to ['text'])
  @bot.message_handler(func=lambda message: True)
  def echo_message(message):
  bot.reply_to(message, message.text)
  
  
  @server.route('/' + API_TOKEN, methods=['POST'])
  def getMessage():
      bot.process_new_updates([telebot.types.Update.de_json(request.stream.read().decode(&quot;utf-8&quot;))])
      return &quot;!&quot;, 200
  
  
  @server.route(&quot;/&quot;)
  def webhook():
      bot.remove_webhook()
      bot.set_webhook(url='Your_App_Name_Link_Here' + API_TOKEN)
      return &quot;!&quot;, 200
  
  
  if __name__ == &quot;__main__&quot;:
  server.run(host=&quot;0.0.0.0&quot;, port=int(os.environ.get('PORT', 5000)))    
```

**Now, we need the libraries that are used for this bot. So to get the librares use**

`
pip3 freeze requirements.txt
`

_You can see the libraries in &quot;requirements.txt&quot;. Don't remove the libraries that you don't know as they_ _are dependent libraries._
_Now we should create a &quot;Procfile&quot; and type this code in that file_

`
web: python3 file_name.py
`

**Don't change name of &quot;requirements.txt&quot; and &quot;Procfile&quot;('P' is capital).**
Now, open github and create your repository, after that upload your file_name.py,requirements.txt and Procfile to github.
Signup/Signin to heroku and Create a new app.
![Connected to Heroku]({{ site.baseurl }}/assets/images/pytelebot/hd_connect.png)
Now, go to the Deploy section and now connect to github, then after type your repository name and connect it.
![Bot deployed]({{ site.baseurl }}/assets/images/pytelebot/bot_deployed.png)

Every thing is done. You are set to go
Now press come down and press deploy branch.
After successfull deployment you can use your bot.
**You can get your app name from settings section in heroku.**</content><author><name>puneeth</name></author><category term="python" /><category term="bot" /><category term="Telegram" /><category term="Flask" /><category term="Heroku" /><summary type="html">Writing code for python telegram bot is easy. We add some extra things to integrate with telegram. Follow me you can build a bot easily..</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/mundana-theme-jekyll/assets/images/pytelebot/pythonbot-display.png" /></entry><entry><title type="html">Alternatives of Google play store</title><link href="http://localhost:4000/mundana-theme-jekyll/alternatives-of-google-play-store/" rel="alternate" type="text/html" title="Alternatives of Google play store" /><published>2019-10-19T00:00:00+05:30</published><updated>2019-10-19T00:00:00+05:30</updated><id>http://localhost:4000/mundana-theme-jekyll/alternatives-of-google-play-store</id><content type="html" xml:base="http://localhost:4000/mundana-theme-jekyll/alternatives-of-google-play-store/">Google Play Store is a great resource of apps, games, books, movies and many more in the Android ecosystem. Although it serves the need of most Android users, there are few segment of people who are either interested to try new app stores or their needs are not met by the play store. This is why we have introduced the
**Alternatives of Google Play Store**.

We have divided this segment into three parts,


Alternative App Stores, Websites, Modified App Stores.

**1. Amazon App Store**   

![Amazon App Store]({{ site.baseurl }}/assets/images/alternatives/google-play-store/amazon-app-store.png)

This App Store is from famous gaint **Amazon**. This app store used to be present in Google Play Store, but later it was taken over by Amazon. The main reason for recommandingthis app store is that, it lets the user to download a paid app for free once a day.

##### pros:
```
A paid app for free (One a day)
```
&lt;a href=&quot;https://www.amazon.co.uk/gp/feature.html?docId=1000851343&quot; target=&quot;_blank&quot;&gt;&lt;button style=&quot;cursor: pointer; color: whitesmoke; background-color: black; display: inline-block;text-decoration: none; border: none; max-width: 100%; font-size:20px&quot;&gt;Download Amazon App Store
&lt;/button&gt;&lt;/a&gt;

**2. Aptoide**

Discover and distribute top apps in the safest Android app store. No geo-restrictions so that you can find all the content you want, wherever you want. In Aptoide you can even find the apps that are not compatible for your device in Google Play Store.

&lt;img src=&quot;{{ site.baseurl }}/assets/images/alternatives/google-play-store/aptoide1.png&quot; alt=&quot;aptoide&quot; style=&quot;width:200px;&quot;/&gt; &lt;img src=&quot;{{ site.baseurl }}/assets/images/alternatives/google-play-store/aptoide2.png&quot; alt=&quot;aptoide&quot; style=&quot;width:200px;&quot;/&gt; &lt;img src=&quot;{{ site.baseurl }}/assets/images/alternatives/google-play-store/aptoide3.png&quot; alt=&quot;aptoide&quot; style=&quot;width:200px;&quot;/&gt;

##### pros:
```
Try non-compatible versions.
Most paid apps in Google Play Store are available for free.
```
&lt;a href=&quot;https://aptoide.en.aptoide.com/&quot; target=&quot;_blank&quot;&gt;&lt;button style=&quot;cursor: pointer; color: whitesmoke; background-color: black; display: inline-block;text-decoration: none; border: none; max-width: 100%; font-size:20px&quot;&gt;Download Aptoide
&lt;/button&gt;&lt;/a&gt;

**3. APKPure**

![APKPure]({{ site.baseurl }}/assets/images/alternatives/google-play-store/apk-pure.png)

APKPure (APK Downloader) App is officially released! With APKPure, you can instantly download and update region locked (not available in your country), pre-registered games and many other Apps on Android.

##### pros:
```
Try apps that are not available in your country.
```

&lt;a href=&quot;https://apkpure.com/apkpure/com.apkpure.aegon&quot; target=&quot;_blank&quot;&gt;&lt;button style=&quot;cursor: pointer; color: whitesmoke; background-color: black; display: inline-block;text-decoration: none; border: none; max-width: 100%; font-size:20px&quot;&gt;Download APKPure
&lt;/button&gt;&lt;/a&gt;

**4. XDA Labs**

XDA Labs is built entirely in-house by the XDA developers and is the best way to access the forums while on mobile. It’s fully Material Design, ad-free, and fast.

![XDA Labs logo]({{ site.baseurl }}/assets/images/alternatives/google-play-store/xda-labs-logo.png)
&lt;img src=&quot;{{ site.baseurl }}/assets/images/alternatives/google-play-store/panel.jpg&quot; alt=&quot;XDA labs&quot; style=&quot;width:500px; height:200&quot;/&gt;

##### pros:
```
Most apps are developed by XDA Developers
Not only apps but also developer tools can be downloaded.
```

&lt;a href=&quot;https://www.xda-developers.com/xda-labs/&quot; target=&quot;_blank&quot;&gt;&lt;button style=&quot;cursor: pointer; color: whitesmoke; background-color: black; display: inline-block;text-decoration: none; border: none; max-width: 100%; font-size:20px&quot;&gt;Download XDA Labs
&lt;/button&gt;&lt;/a&gt;

**5. F-Droid**

F-Droid is an installable catalogue of FOSS (Free and Open Source Software) applications for the Android platform. The client makes it easy to browse, install, and keep track of updates on your device.

![Fdroid logo]({{ site.baseurl }}/assets/images/alternatives/google-play-store/fdroid-logo.svg)
&lt;img src=&quot;{{ site.baseurl }}/assets/images/alternatives/google-play-store/f-droid.png&quot; alt=&quot;Fdroid&quot; style=&quot;width:250px; height:410px; background: url('{{ site.baseurl }}/assets/images/alternatives/google-play-store/fdroid-screenshot-en.png') center center no-repeat; background-size: 78% auto&quot;/&gt;

&lt;a href=&quot;https://f-droid.org/en/&quot; target=&quot;_blank&quot;&gt;&lt;button style=&quot;cursor: pointer; color: whitesmoke; background-color: black; display: inline-block;text-decoration: none; border: none; max-width: 100%; font-size:20px&quot;&gt;Download F-Droid
&lt;/button&gt;&lt;/a&gt;

**6. Getjar**

This app lets you access thousands of free applications from GetJar.com. Check out your favorite categories like games and entertainment, or browse the 100+ free premium apps we have in GetJar Gold that are worth a combined total over $200!

&lt;img src=&quot;{{ site.baseurl }}/assets/images/alternatives/google-play-store/getjar1.png&quot; alt=&quot;getjar&quot; style=&quot;width:200px;&quot;/&gt; &lt;img src=&quot;{{ site.baseurl }}/assets/images/alternatives/google-play-store/getjar2.png&quot; alt=&quot;getjar&quot; style=&quot;width:200px;&quot;/&gt; &lt;img src=&quot;{{ site.baseurl }}/assets/images/alternatives/google-play-store/getjar3.png&quot; alt=&quot;getjar&quot; style=&quot;width:200px;&quot;/&gt;

&lt;a href=&quot;https://www.getjar.com/categories/search-apps/GetJar-Apps-16914&quot; target=&quot;_blank&quot;&gt;&lt;button style=&quot;cursor: pointer; color: whitesmoke; background-color: black; display: inline-block;text-decoration: none; border: none; max-width: 100%; font-size:20px&quot;&gt;Download Getjar
&lt;/button&gt;&lt;/a&gt;

**7. Slide ME**

The SlideME Application Manager (SAM) app provides access to a curated list of the very best of Android applications available from SlideME. All the apps are manually approved and tested on a wide variety of devices, to make sure you get the best experience possible on your device, from your device.

&lt;img src=&quot;{{ site.baseurl }}/assets/images/alternatives/google-play-store/slideme.jpg&quot; alt=&quot;getjar&quot; style=&quot;width:400px; height:200px&quot;/&gt; 

&lt;a href=&quot;http://slideme.org/application/slideme-marketplace&quot; target=&quot;_blank&quot;&gt;&lt;button style=&quot;cursor: pointer; color: whitesmoke; background-color: black; display: inline-block;text-decoration: none; border: none; max-width: 100%; font-size:20px&quot;&gt;Download Slide Me
&lt;/button&gt;&lt;/a&gt;</content><author><name>nikhil</name></author><category term="summer" /><summary type="html">Google Play Store is a great resource of apps, games, books, movies and many more in the Android ecosystem. Although it serves the need of most Android users, there are few segment of people who are either interested to try new app stores or their needs are not met by the play store. This is why we have introduced the Alternatives of Google Play Store.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/mundana-theme-jekyll/assets/images/alternatives/google-play-store/7-alternatives.png" /></entry></feed>